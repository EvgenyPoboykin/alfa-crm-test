{"version":3,"sources":["App/components/Loader/index.tsx","App/components/HeaderDescription/info.tsx","App/components/HeaderDescription/HeaderDescription.tsx","App/components/HeaderDescription/index.tsx","App/components/ItemList/ItemList.tsx","App/components/ItemList/index.tsx","App/components/SearchInput/SearchInput.tsx","App/components/SearchInput/index.tsx","App/components/Item/Item.tsx","App/components/Item/index.tsx","App/components/Logotype/Logotype.tsx","App/components/Logotype/index.tsx","App/components/Input/Input.tsx","App/components/Input/index.tsx","App/components/Button/Button.tsx","App/components/Button/index.tsx","App/components/Header/Header.tsx","App/components/Header/index.tsx","App/components/HeaderDescriptionItem/HeaderDescriptionItem.tsx","App/components/HeaderDescriptionItem/index.tsx","App/components/AddUser/AddUser.tsx","App/components/AddUser/index.tsx","App/components/Authentication/Authentication.tsx","App/components/Authentication/index.tsx","App/components/Page/Page.tsx","App/components/Routers/routersMap.tsx","App/components/Routers/index.tsx","App/components/Routers/Routers.tsx","App/components/CheckboxWithText/CheckboxWithText.tsx","App/components/CheckboxWithText/index.tsx"],"names":["Loader","info","Container","lazy","then","mod","default","HeaderDescriptionItem","HeaderDescription","memo","job","desc","Table","THead","TBody","Tr","Th","Item","ItemList","useContext","ContextApp","appstate","items","token","to","map","item","key","id","Content","BtnContainer","Input","Button","SearchInput","onClickSearch","setSearch","placeholder","defaultValue","getValue","value","visiblePlaceholder","name","onClick","Td","dob","balance","e_date","email","phone","addr","colored","parseFloat","Date","parse","now","join","Logo","Logotype","Span","InputField","type","useState","focus","SetFocus","SetValue","display","msg","err","SetErr","useEffect","d","mm","getMonth","dd","getDate","yy","getFullYear","red","onFocus","onBlur","onChange","e","newValue","currentTarget","EmailAddress","Phone","autoComplete","autoFill","prev","next","Btn","Name","preloader","color","disable","Header","Job","Desc","Bg","Form","FormName","BtnsControl","BtnControl","dialog","userstate","setUserState","setAppState","AddUser","onClickCancel","split","length","FormContainer","Authentication","onSubmitAuth","onPressEnterSubmitAuth","password","fetching","redirect","preloadFetch","onSubmit","onKeyDown","Page","routersMap","path","component","Routers","exact","Checkbox","CheckboxWithText","defaultChecked","target","checked"],"mappings":"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","file":"static/js/15.042e24e7.chunk.js","sourcesContent":["import Loader from './Loader';\nexport default Loader;","export const info = {\n    job: 'TEST WORK',\n    developer: 'Evgeny Poboykin',\n    stack: 'React, TypeScript, styled-components',\n};\n","import React, { lazy, memo } from 'react';\nimport { IHeaderDescription } from './interfaces';\n\nimport { info } from './info';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\n\nconst HeaderDescriptionItem = lazy(() => import('../HeaderDescriptionItem'));\n\nconst HeaderDescription: React.FC<IHeaderDescription> = memo(() => {\n    return (\n        <Container>\n            <HeaderDescriptionItem job='job' desc={info.job} />\n            <HeaderDescriptionItem job='developer' desc={info.developer} />\n            <HeaderDescriptionItem job='stack' desc={info.stack} />\n        </Container>\n    );\n});\nexport default HeaderDescription;\n","import HeaderDescription from './HeaderDescription';\nexport default HeaderDescription;","import React, { lazy, memo, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { IItemList } from './interfaces';\nimport { ContextApp } from '../../state';\n\n// styled\nconst Table = lazy(() => import('./style').then((mod) => ({ default: mod.Table })));\nconst THead = lazy(() => import('./style').then((mod) => ({ default: mod.THead })));\nconst TBody = lazy(() => import('./style').then((mod) => ({ default: mod.TBody })));\nconst Tr = lazy(() => import('./style').then((mod) => ({ default: mod.Tr })));\nconst Th = lazy(() => import('./style').then((mod) => ({ default: mod.Th })));\n\n// components\nconst Item = lazy(() => import('../Item'));\n\nconst ItemList: React.FC<IItemList> = memo(() => {\n    const {\n        appstate: { items, token },\n    } = useContext(ContextApp);\n\n    return token === '' ? (\n        <Redirect to='/' />\n    ) : (\n        <Table>\n            <THead>\n                <Tr>\n                    <Th>имя</Th>\n                    <Th>дата рождения</Th>\n                    <Th>остаток на счете</Th>\n                    <Th>дд</Th>\n                    <Th>элекстронная почта</Th>\n                    <Th>телефон</Th>\n                    <Th>адрес</Th>\n                </Tr>\n            </THead>\n            <TBody>\n                {items.map((item: any) => (\n                    <Item key={item.id} item={item} />\n                ))}\n            </TBody>\n        </Table>\n    );\n});\nexport default ItemList;\n","import ItemList from './ItemList';\nexport default ItemList;","import React, { lazy, memo, useContext } from 'react';\nimport { ContextApp } from '../../state';\nimport { ISearchInput } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Content = lazy(() => import('./style').then((mod) => ({ default: mod.Content })));\nconst BtnContainer = lazy(() => import('./style').then((mod) => ({ default: mod.BtnContainer })));\nconst Input = lazy(() => import('../Input'));\nconst Button = lazy(() => import('../Button'));\n\nconst SearchInput: React.FC<ISearchInput> = memo(() => {\n    const { onClickSearch, setSearch } = useContext(ContextApp);\n    return (\n        <Container>\n            <Content>\n                <Input\n                    placeholder='Поиск по списку...'\n                    defaultValue=''\n                    getValue={(value) => setSearch(value)}\n                    visiblePlaceholder={false}\n                />\n                <BtnContainer>\n                    <Button name='поиск' onClick={onClickSearch} />\n                </BtnContainer>\n            </Content>\n        </Container>\n    );\n});\nexport default SearchInput;\n","import SearchInput from './SearchInput';\nexport default SearchInput;","import React, { memo, lazy } from 'react';\n\nimport { IItem } from './interfaces';\n\n// styled\nconst Tr = lazy(() => import('./style').then((mod) => ({ default: mod.Tr })));\nconst Td = lazy(() => import('./style').then((mod) => ({ default: mod.Td })));\n\nconst Item: React.FC<IItem> = memo(({ item: { name, dob, balance, e_date, email, phone, addr } }) => {\n    return (\n        <Tr>\n            <Td>{name}</Td>\n            <Td>{dob}</Td>\n            <Td colored={parseFloat(balance) > 0}>{balance}</Td>\n            <Td colored={Date.parse(e_date) > Date.now()}>{e_date}</Td>\n            <Td>{email}</Td>\n            <Td>{phone.join(', ')}</Td>\n            <Td>{addr}</Td>\n        </Tr>\n    );\n});\nexport default Item;\n","import Item from './Item';\nexport default Item;","import React, { lazy, memo } from 'react';\nimport { ILogotype } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Logo = lazy(() => import('./style').then((mod) => ({ default: mod.Logotype })));\n\nconst Logotype: React.FC<ILogotype> = memo(() => {\n    return (\n        <Container>\n            <Logo />\n        </Container>\n    );\n});\nexport default Logotype;\n","import Logotype from './Logotype';\nexport default Logotype;","import React, { lazy, memo, useState, useEffect } from 'react';\nimport { IInput, IErr } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Span = lazy(() => import('./style').then((mod) => ({ default: mod.Span })));\nconst InputField = lazy(() => import('./style').then((mod) => ({ default: mod.InputField })));\n\nconst Input: React.FC<IInput> = ({ getValue, defaultValue, placeholder, type = 'text', visiblePlaceholder = true }) => {\n    const [focus, SetFocus] = useState<boolean>(false);\n    const [value, SetValue] = useState<string>(defaultValue);\n    const [err, SetErr] = useState<IErr>({ display: false, msg: '' });\n\n    const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.currentTarget.value;\n\n        if (type === 'email') {\n            import('./validate').then((mod) => {\n                mod.EmailAddress(newValue, SetErr, SetValue, getValue);\n            });\n        } else if (type === 'phone') {\n            import('./validate').then((mod) => {\n                mod.Phone(newValue, SetErr, SetValue, getValue);\n            });\n        } else {\n            SetValue(newValue);\n            getValue(newValue);\n        }\n    };\n\n    useEffect(() => {\n        if (type === 'date' && defaultValue === '') {\n            var d = new Date();\n            var mm = d.getMonth() + 1;\n            var dd = d.getDate() < 10 ? `0${d.getDate()}` : d.getDate();\n            var yy = d.getFullYear();\n            SetValue(`${yy}-${mm}-${dd}`);\n        } else {\n            SetValue(defaultValue);\n        }\n    }, [value, defaultValue, type]);\n    return (\n        <Container focus={focus}>\n            {visiblePlaceholder ? (\n                <Span red={err.display} focus={focus || value !== '' ? true : false}>\n                    {placeholder} {err.display ? err.msg : null}\n                </Span>\n            ) : null}\n            <InputField\n                visiblePlaceholder={visiblePlaceholder}\n                value={value}\n                type={type}\n                onFocus={() => SetFocus(true)}\n                onBlur={() => SetFocus(false)}\n                onChange={onChangeInput}\n                autoComplete='new-password'\n                autoFill='false'\n                placeholder={visiblePlaceholder ? '' : placeholder}\n            />\n        </Container>\n    );\n};\nexport default memo(Input, (prev, next) => {\n    if (prev !== next) {\n        return false;\n    }\n    return true;\n});\n","import Input from './Input';\nexport default Input;","import React, { lazy, memo } from 'react';\nimport { IButton } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Btn = lazy(() => import('./style').then((mod) => ({ default: mod.Btn })));\nconst Name = lazy(() => import('./style').then((mod) => ({ default: mod.Name })));\n\nconst Button: React.FC<IButton> = memo(({ onClick, preloader, name, color = 'blue', disable }) => {\n    return (\n        <Container>\n            <Btn color={color} disable={disable} onClick={onClick}>\n                <Name>{name}</Name>\n                {preloader}\n            </Btn>\n        </Container>\n    );\n});\nexport default Button;\n","import Button from './Button';\nexport default Button;","import React, { lazy, memo } from 'react';\nimport { IHeader } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\n\nconst Logotype = lazy(() => import('../Logotype'));\nconst HeaderDescription = lazy(() => import('../HeaderDescription'));\n\nconst Header: React.FC<IHeader> = memo(() => {\n    return (\n        <Container>\n            <Logotype />\n            <HeaderDescription />\n        </Container>\n    );\n});\nexport default Header;\n","import Header from './Header';\nexport default Header;","import React, { lazy, memo } from 'react';\nimport { IHeaderDescriptionItem } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Job = lazy(() => import('./style').then((mod) => ({ default: mod.Job })));\nconst Desc = lazy(() => import('./style').then((mod) => ({ default: mod.Desc })));\n\nconst HeaderDescriptionItem: React.FC<IHeaderDescriptionItem> = memo(({ desc, job }) => {\n    return (\n        <Container>\n            <Job>{job}: </Job>\n            <Desc>{desc}</Desc>\n        </Container>\n    );\n});\nexport default HeaderDescriptionItem;\n","import HeaderDescriptionItem from './HeaderDescriptionItem';\nexport default HeaderDescriptionItem;","import React, { lazy, memo, useContext } from 'react';\nimport { ContextApp, IAppState, IItem } from '../../state';\nimport { IAddUser } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Bg = lazy(() => import('./style').then((mod) => ({ default: mod.Bg })));\nconst Form = lazy(() => import('./style').then((mod) => ({ default: mod.Form })));\nconst FormName = lazy(() => import('./style').then((mod) => ({ default: mod.FormName })));\nconst BtnsControl = lazy(() => import('./style').then((mod) => ({ default: mod.BtnsControl })));\nconst BtnControl = lazy(() => import('./style').then((mod) => ({ default: mod.BtnControl })));\n\nconst Input = lazy(() => import('../Input'));\nconst Button = lazy(() => import('../Button'));\n\nconst AddUser: React.FC<IAddUser> = () => {\n    const {\n        appstate: { dialog },\n        userstate: { name, dob, email, phone, addr },\n        setUserState,\n        setAppState,\n        AddUser,\n        onClickCancel,\n    } = useContext(ContextApp);\n    return (\n        <Container dialog={dialog}>\n            <Form>\n                <FormName>Добавить пользователя</FormName>\n                <Input\n                    placeholder='имя'\n                    getValue={(value) => setUserState((prev: IItem) => ({ ...prev, name: value }))}\n                    defaultValue={name}\n                />\n                <Input\n                    placeholder='дата рождения'\n                    getValue={(value) => setUserState((prev: IItem) => ({ ...prev, dob: value }))}\n                    defaultValue={dob}\n                    type='date'\n                />\n                <Input\n                    placeholder='электронная почта'\n                    getValue={(value) => setUserState((prev: IItem) => ({ ...prev, email: value.split(', ') }))}\n                    defaultValue={email.join(', ')}\n                    type='email'\n                />\n                <Input\n                    placeholder='телефон без +7 через запятую'\n                    getValue={(value) => setUserState((prev: IItem) => ({ ...prev, phone: value.split(', ') }))}\n                    defaultValue={phone.join(', ')}\n                    type='phone'\n                />\n                <Input\n                    placeholder='адрес'\n                    getValue={(value) => setUserState((prev: IItem) => ({ ...prev, addr: value.split(', ') }))}\n                    defaultValue={addr.join(', ')}\n                />\n                <BtnsControl>\n                    <BtnControl>\n                        <Button color='red' name='отмена' onClick={onClickCancel} />\n                    </BtnControl>\n                    <BtnControl>\n                        <Button\n                            disable={\n                                name === '' || dob === '' || email === '' || phone.length === 0 || addr.length === 0\n                            }\n                            name='добавить'\n                            onClick={AddUser}\n                        />\n                    </BtnControl>\n                </BtnsControl>\n            </Form>\n            <Bg onClick={() => setAppState((prev: IAppState) => ({ ...prev, dialog: false }))}></Bg>\n        </Container>\n    );\n};\nexport default memo(AddUser, (prev, next) => {\n    if (prev !== next) {\n        return false;\n    }\n    return true;\n});\n","import AddUser from './AddUser';\nexport default AddUser;","import React, { memo, lazy, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ContextApp, IAppState } from '../../state';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst FormContainer = lazy(() => import('./style').then((mod) => ({ default: mod.FormContainer })));\nconst Form = lazy(() => import('./style').then((mod) => ({ default: mod.Form })));\n\nconst Logotype = lazy(() => import('../Logotype'));\nconst Input = lazy(() => import('../Input'));\nconst Button = lazy(() => import('../Button'));\nconst Loader = lazy(() => import('../Loader'));\n\nconst Authentication: React.FC = memo(() => {\n    const {\n        onSubmitAuth,\n        onPressEnterSubmitAuth,\n        setAppState,\n        appstate: { email, password, fetching, redirect },\n    } = useContext(ContextApp);\n\n    const preloadFetch = fetching ? <Loader /> : null;\n    return redirect ? (\n        <Redirect to='/customer' />\n    ) : (\n        <Container>\n            <FormContainer>\n                <Form onSubmit={onSubmitAuth} onKeyDown={onPressEnterSubmitAuth}>\n                    <Logotype />\n                    <Input\n                        placeholder='e-mail'\n                        type='email'\n                        getValue={(value) => setAppState((prev: IAppState) => ({ ...prev, email: value }))}\n                        defaultValue={email}\n                    />\n                    <Input\n                        placeholder='api key'\n                        type='password'\n                        defaultValue={password}\n                        getValue={(value) => setAppState((prev: IAppState) => ({ ...prev, password: value }))}\n                    />\n                    <Button\n                        name='АВТОРИЗОВАТЬСЯ'\n                        color='blue'\n                        preloader={preloadFetch}\n                        disable={email === '' || password === ''}\n                    />\n                </Form>\n            </FormContainer>\n        </Container>\n    );\n});\nexport default Authentication;\n","import Authentication from './Authentication';\nexport default Authentication;","import React, { lazy, memo, useContext } from 'react';\nimport { ContextApp, IAppState } from '../../state';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Content = lazy(() => import('./style').then((mod) => ({ default: mod.Content })));\nconst Btn = lazy(() => import('./style').then((mod) => ({ default: mod.Btn })));\nconst BtnContainer = lazy(() => import('./style').then((mod) => ({ default: mod.BtnContainer })));\n\nconst Header = lazy(() => import('../Header'));\nconst SearchInput = lazy(() => import('../SearchInput'));\nconst ItemList = lazy(() => import('../ItemList'));\nconst Button = lazy(() => import('../Button'));\nconst AddUser = lazy(() => import('../AddUser'));\n\nconst Page: React.FC = memo(() => {\n    const { setAppState } = useContext(ContextApp);\n    return (\n        <Container>\n            <Content>\n                <AddUser />\n                <Header />\n                <SearchInput />\n                <Btn>\n                    <BtnContainer>\n                        <Button\n                            name='добавить пользователя'\n                            color='green'\n                            onClick={() => setAppState((prev: IAppState) => ({ ...prev, dialog: true }))}\n                        />\n                    </BtnContainer>\n                </Btn>\n                <ItemList />\n            </Content>\n        </Container>\n    );\n});\nexport default Page;\n","import Authentication from '../Authentication';\nimport Page from '../Page';\n\nexport const routersMap = [\n    { id: 1, path: '/', component: Authentication },\n    { id: 2, path: '/customer', component: Page },\n    { id: 3, path: '*', component: Authentication },\n];\n","import Routers from './Routers';\nexport default Routers;","import React, { memo } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { routersMap } from './routersMap';\nimport { IRouters } from './interfaces';\n\nconst Routers: React.FC<IRouters> = memo(() => {\n    return (\n        <Switch>\n            {routersMap.map(({ id, path, component }) => (\n                <Route exact key={id} path={path} component={component} />\n            ))}\n        </Switch>\n    );\n});\nexport default Routers;\n","import React, { lazy, memo } from 'react';\nimport { ICheckboxWithText } from './interfaces';\n\nconst Container = lazy(() => import('./style').then((mod) => ({ default: mod.Container })));\nconst Content = lazy(() => import('./style').then((mod) => ({ default: mod.Content })));\nconst Checkbox = lazy(() => import('./style').then((mod) => ({ default: mod.Checkbox })));\nconst Span = lazy(() => import('./style').then((mod) => ({ default: mod.Span })));\n\nconst CheckboxWithText: React.FC<ICheckboxWithText> = memo(({ defaultValue, name, color = 'blue', getValue }) => {\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.checked;\n        getValue(value);\n    };\n    return (\n        <Container>\n            <Content>\n                <Checkbox color={color} defaultChecked={defaultValue} onChange={onChange} />\n                <Span>{name}</Span>\n            </Content>\n        </Container>\n    );\n});\nexport default CheckboxWithText;\n","import CheckboxWithText from './CheckboxWithText';\nexport default CheckboxWithText;"],"sourceRoot":""}